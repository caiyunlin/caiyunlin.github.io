import{_ as i,c as a,o as n,ai as l}from"./chunks/framework.CtWg-Y9G.js";const g=JSON.parse('{"title":"搭建本地的 Jenkins 持续集成系统","description":"","frontmatter":{"title":"搭建本地的 Jenkins 持续集成系统","date":"2017-12-03T13:50:20.000Z","categories":["技术"],"tags":["jenkins"],"urlname":"install-jenkins","url":"https://www.caiyunlin.com/posts/install-jenkins/"},"headers":[],"relativePath":"posts/2017-12-03-install-jenkins.md","filePath":"posts/2017-12-03-install-jenkins.md"}'),e={name:"posts/2017-12-03-install-jenkins.md"};function p(t,s,k,h,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<p>这篇文章简要介绍如何在本地搭建一套Jenkins持续集成系统。</p><p>基本实现是这样的</p><ol><li>在虚拟机中安装一套Ubuntu系统</li><li>在Ubuntu中，安装Jenkins 和 Docker</li><li>在Jenkins中配置Job，从GitHub获取代码，并且自动Docker实例，运行测试，编译和部署，之后销毁Docker实例</li></ol><h2 id="基础环境" tabindex="-1">基础环境 <a class="header-anchor" href="#基础环境" aria-label="Permalink to &quot;基础环境&quot;">​</a></h2><p>该系统选择的基础环境是 Ubuntu 操作系统，所以务必先准备好Ubuntu，推荐版本是16.04，这个不是最新的版本，但是是长期支持的稳定版本。</p><p>本地虚拟机可以到官网下载 Ubuntu 16.04 Server 版本镜像。</p><p><a href="https://releases.ubuntu.com/16.04/ubuntu-16.04.6-server-amd64.iso" target="_blank" rel="noreferrer">https://releases.ubuntu.com/16.04/ubuntu-16.04.6-server-amd64.iso</a></p><p>注意：安装Ubuntu的时候，请选择安装组件 LAMP 和 SSH Server</p><h2 id="安装-jenkins" tabindex="-1">安装 Jenkins <a class="header-anchor" href="#安装-jenkins" aria-label="Permalink to &quot;安装 Jenkins&quot;">​</a></h2><p>Ubuntu准备好了后，我们就可以直接登录系统，开始安装Jenkins了 参考官方WIKI：<a href="https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Ubuntu" target="_blank" rel="noreferrer">https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Ubuntu</a></p><p>执行下面脚本</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 添加Jenkins的Global Key到APT中</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -q</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -O</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://jenkins-ci.org/debian/jenkins-ci.org.key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-key</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 更新APT库，安装Jenkins</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">echo deb https://pkg.jenkins-ci.org/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jenkins</span></span></code></pre></div><h2 id="启动-jenkins" tabindex="-1">启动 Jenkins <a class="header-anchor" href="#启动-jenkins" aria-label="Permalink to &quot;启动 Jenkins&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> service</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jenkins</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> start</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 停止</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> service</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jenkins</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> stop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 相关路径</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 访问路径：https://localhost:8080  </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装路径：/var/lib/jenkins  </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 日志路径：/var/log/jenkins</span></span></code></pre></div><h2 id="配置-jenkins" tabindex="-1">配置 Jenkins <a class="header-anchor" href="#配置-jenkins" aria-label="Permalink to &quot;配置 Jenkins&quot;">​</a></h2><ul><li>在浏览器访问Jenkins地址，注意使用正确的ip地址，可以使用ifconfig查出地址， 如 <a href="https://192.168.0.101:8080" target="_blank" rel="noreferrer">https://192.168.0.101:8080</a></li><li>在登录页面会需要你输入admin的password，使用下面命令获的密码，输入密码</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cat</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/jenkins_home/secrets/initialAdminPassword</span></span></code></pre></div><ul><li>点击继续，在选择插件界面，选择 Install suggested Plugins</li><li>插件安装完毕之后，配置登录的管理员 用户名和密码</li><li>配置完成</li></ul><h2 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h2><p>我们期望 Jenins 的Deployment Pipeline 运行在Docker里面，所以需要安装一下 Docker</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 清理旧版 docker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker-engine</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker.io</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 更新 APT-GET 库准备安装 一些前置软件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装HTTPS传输,CURL等软件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-transport-https</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ca-certificates</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> curl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> software-properties-common</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 添加 Docker’s official GPG key:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">curl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -fsSL</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://download.docker.com/linux/ubuntu/gpg</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-key</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-key</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> fingerprint</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0EBFCD88</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Set Docker 安装库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add-apt-repository</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">   &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">deb [arch=amd64] https://download.docker.com/linux/ubuntu </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   $(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">lsb_release</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -cs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   stable</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装Docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt-get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker-ce</span></span></code></pre></div><h2 id="运行-docker" tabindex="-1">运行 Docker <a class="header-anchor" href="#运行-docker" aria-label="Permalink to &quot;运行 Docker&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> hello-world</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dockerfile-receiver</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 9080:80</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 9080:80</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span></span></code></pre></div><h2 id="设置-jenkins-运行-docker的权限" tabindex="-1">设置 Jenkins 运行 Docker的权限 <a class="header-anchor" href="#设置-jenkins-运行-docker的权限" aria-label="Permalink to &quot;设置 Jenkins 运行 Docker的权限&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 如果还没有 docker group 就添加一个：</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> groupadd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 将当前用户和jenkins用户加入该 group 内。然后退出并重新登录就生效啦。</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> gpasswd</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -a</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> \${</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">USER</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> gpasswd</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jenkins</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 重启 docker 服务</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> service</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 切换当前会话到新 group</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">newgrp</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 重启 jenkins 服务</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> service</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> jenkins</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span></span></code></pre></div><p>至此 Jenkins 环境就搭建好了</p><h1 id="配置-jenkins-pipeline" tabindex="-1">配置 Jenkins Pipeline <a class="header-anchor" href="#配置-jenkins-pipeline" aria-label="Permalink to &quot;配置 Jenkins Pipeline&quot;">​</a></h1><p>下面尝试配置一个Jenkins的Pipeline，测试一下部署流程，基本模拟步骤如下：</p><ol><li>创建一个Jenkins Pipeline</li><li>Pipeline中使用远程代码库中的Jenkinsfile在指定部署内容</li><li>编写提交Jenkinsfile</li></ol><h2 id="准备代码库" tabindex="-1">准备代码库 <a class="header-anchor" href="#准备代码库" aria-label="Permalink to &quot;准备代码库&quot;">​</a></h2><ol><li>去GitHub上面创建一个测试代码库，如jenkins-test,可以参考 <a href="https://github.com/cylin2000/jenkins-test" target="_blank" rel="noreferrer">https://github.com/cylin2000/jenkins-test</a></li><li>代码库里面创建 Jenkinsfile 文件，内容是json格式的定义，如下:</li></ol><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pipeline {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    agent { </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    	docker {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    		image  </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">node:6.3</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    		args </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-v $HOME/.n63:/root/.n63 -u root:root</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    	} </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    } </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    stages {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        stage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Example Build</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            steps {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                sh </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">npm --version</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre></div><p>这个Job很简单，定义了使用docker的node 6.3版本的image 作为 build 的容器，build开始的时候，执行 npm --version 就可以显示npm的版本，注意运行Jenkins的主机不需要安装nodejs的</p><pre><code>注意 args 中的 -u root:root 一定要有，否则会出现 steps 里面的命令，如 npm install 之类的命令没有权限运行
</code></pre><ol start="3"><li><p>代码提交之后，就回到Jenkins界面，选择&quot;New Item&quot;，填入名称 如 &quot;HelloPipeline&quot; 选择 &quot;Pipeline&quot;，点击&quot;OK&quot; <img src="https://images.caiyunlin.com/20171204020949.png" alt="image"></p></li><li><p>在Pipeline配置界面里，&quot;Definition&quot;选择&quot;Pipeline script from SCM&quot;,&quot;SCM&quot;选择 &quot;Git&quot;, 然后填入你的Repository地址，最后点击下面的 &quot;Save&quot; 按钮 <img src="https://images.caiyunlin.com/20171204021321.png" alt="image"></p></li></ol><p>【全文完】</p>`,36)]))}const A=i(e,[["render",p]]);export{g as __pageData,A as default};
