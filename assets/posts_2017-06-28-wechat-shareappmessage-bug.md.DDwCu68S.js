import{_ as a,c as i,o as e,ai as n}from"./chunks/framework.CtWg-Y9G.js";const c=JSON.parse('{"title":"微信使用 JSSDK 分享 OAuth 链接的问题","description":"","frontmatter":{"title":"微信使用 JSSDK 分享 OAuth 链接的问题","categories":["技术"],"date":"2017-06-28T07:33:00.000Z","urlname":"wechat-shareappmessage-bug","url":"https://www.caiyunlin.com/posts/wechat-shareappmessage-bug/"},"headers":[],"relativePath":"posts/2017-06-28-wechat-shareappmessage-bug.md","filePath":"posts/2017-06-28-wechat-shareappmessage-bug.md"}'),t={name:"posts/2017-06-28-wechat-shareappmessage-bug.md"};function p(h,s,l,r,k,o){return e(),i("div",null,s[0]||(s[0]=[n(`<p>使用微信的JSSDK，可以在转发图文给朋友或者转发到朋友圈的时候，对转发的标题，描述以及图片进行自定义，这是个很好的功能，然而最近测试的时候发现一个Bug，当转发的链接是OAuth链接的时候，这段定义就失效了。</p><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>先简单说一下什么是OAuth链接，参考微信的说明文档 <a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842</a></p><p>微信OAuth的链接格式是这样的 <a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect" target="_blank" rel="noreferrer">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a> 其中的 REDIRECT_URI 就是我们自己的网页链接，这段链接只能在微信里面访问，微信会得到通过用户授权得到用户的信息，然后跳转到 REDIRECT_URL 将用户信息传过来</p><p>关于JSSDK的分享自定义，微信的说明文档在此处 <a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115</a></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">获取</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">“</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">分享给朋友</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">”</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">按钮点击状态及自定义分享内容接口</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">onMenuShareAppMessage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 分享标题</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    desc</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 分享描述</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    link</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    imgUrl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 分享图标</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 分享类型,music、video或link，不填默认为link</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    dataUrl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 如果type是music或video，则要提供数据链接，默认为空</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    success</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 用户确认分享后执行的回调函数</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    },</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    cancel</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 用户取消分享后执行的回调函数</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre></div><p>上面的代码中，注意link的描述，&quot;该链接域名或路径必须与当前页面对应的公众号JS安全域名一致&quot;，就是说你转发的链接必须与你公众号的JS安全域名一致，因为安全问题，这个设置无可厚非。 你不能自己的图文在 <a href="https://www.mydomain.com" target="_blank" rel="noreferrer">https://www.mydomain.com</a> 而分享其他链接如 <a href="https://www.baidu.com" target="_blank" rel="noreferrer">https://www.baidu.com</a>， 当你这么设置的时候，这段分享自定义的脚本就全部失效。</p><p>现在问题来了，如果我想使用微信自己的OAuth链接进行分享的话，也会失效，虽然是他自家的域名，微信同样认为这个链接和JS安全域名不一致，而如果直接分享 <a href="https://www.mydomain.com/xxx" target="_blank" rel="noreferrer">https://www.mydomain.com/xxx</a> 的链接时，是无法从微信里得知用户信息的。</p><p>JS安全域名是可以在公众号管理后台设置的，但是无法把open.weixin.qq.com或者qq.com设置为JS安全域名的。</p><img alt="image" src="https://www.caiyunlin.com/img/wechat-js-domain.png"><p>看起来似乎是无解了</p><h2 id="解决方法" tabindex="-1">解决方法 <a class="header-anchor" href="#解决方法" aria-label="Permalink to &quot;解决方法&quot;">​</a></h2><p>经过思考，归纳一下问题就是在于两点</p><ol><li>JSSDK只能转发同域名下的链接 <a href="https://www.mydomain.com" target="_blank" rel="noreferrer">https://www.mydomain.com</a></li><li>必须使用 <a href="https://open.weixin.qq.com" target="_blank" rel="noreferrer">https://open.weixin.qq.com</a> 开头的OAuth链接才能识别微信用户的身份</li></ol><p>解决方法其实很简单，把OAuth的链接编码，并且传给自己的代码，使用后台跳转如</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span>$oauth_url = &quot;https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect&quot;;</span></span>
<span class="line"><span>$encoded_url = base64_encode($oauth_url);</span></span>
<span class="line"><span>$new_url = &quot;https://www.mydomain.com/jump?url=&quot;+encoded_url;</span></span>
<span class="line"><span>此处 $new_url 代替之前的转发url，他的域名是符合JSSDK安全域名定义的</span></span></code></pre></div><p>Jump里的处理规则就是解码以及后台跳转，伪代码如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span>$encoded_url = request[&#39;url&#39;];</span></span>
<span class="line"><span>$url = base64_decode($encoded_url);</span></span>
<span class="line"><span>header(&quot;location: &quot;.$url);</span></span></code></pre></div><p>这个问题困扰了我好久，还好终于解决了</p><h2 id="_2019-02-27-补充" tabindex="-1">2019-02-27 补充 <a class="header-anchor" href="#_2019-02-27-补充" aria-label="Permalink to &quot;2019-02-27 补充&quot;">​</a></h2><p>这个问题不是微信的bug，其实转发的时候可以直接转发自己域名下的地址，比如 <a href="https://www.mydomain.com/share/news/123" target="_blank" rel="noreferrer">https://www.mydomain.com/share/news/123</a> 然后，在这个具体的页面里面，如果需要OAuth，进行二次跳转，而不是必须一开始就拼接OAuth的地址，这个问题是开始钻了牛角尖了。。。</p><p>【全文完】</p>`,22)]))}const m=a(t,[["render",p]]);export{c as __pageData,m as default};
